#!/bin/bash

. release-common.sh

if [ ! -d /p/vdt/public/html/release-info/ ]; then
    echo "Not on UW\'s AFS..."
    echo "Enter username and machine name to use for scp, e.g. matyas@ingwe.cs.wisc.edu"
    read rusermachine
fi

for ver in ${versions[@]}; do
    branch=$(osg_release $ver)
    read -ra dvers <<< $(osg_dvers $ver) # create array of dvers
    for dver in ${dvers[@]}; do
        prerelease_repo=osg-$branch-$dver-prerelease
        release_repo=osg-$branch-$dver-release

        # Push from pre-release to release
        echo '==========================================================================='
        echo "Unlocking $release_repo"
        osg-koji edit-tag --unlock $release_repo
        echo

        echo '==========================================================================='
        echo "Moving packages from $prerelease_repo to $release_repo"
        osg-koji list-tagged --quiet $prerelease_repo | awk '{print $1}' > move-to-$branch-release-$dver
        xargs --arg-file move-to-$branch-release-$dver osg-koji move-pkg $prerelease_repo $release_repo

        echo

        # Create new release repo
        if [[ $branch == 'upcoming' ]]; then
            latest_version=$(echo ${versions[@]} | sed s'/ /\n/' | sort -V | head -n1)
            versioned_release_repo=osg-$branch-$dver-release-$latest_version
        else
            versioned_release_repo=osg-$branch-$dver-release-$ver
        fi
        echo "Cloning $release_repo to $versioned_release_repo"
        osg-koji clone-tag $release_repo $versioned_release_repo
        echo

        # Lock repos
        echo "Locking $release_repo"
        osg-koji edit-tag --lock $release_repo
        echo "Locking $versioned_release_repo"
        osg-koji edit-tag --lock $versioned_release_repo
        echo

        # Regen repos
        echo "Regenerating $versioned_release_repo"
        osg-koji regen-repo --nowait $versioned_release_repo
        echo

        # Write release notes
        awk '{ print "   * [[https://koji-hub.batlab.org/koji/search?match=glob&type=build&terms=" $1 "][" $1 "]]"}' move-to-$branch-release-$dver > $branch-release-note-packages-$dver
         xargs --arg-file move-to-$branch-release-$dver osg-koji buildinfo | fgrep "/mnt" | xargs -n 1 basename | perl -p -e "s/\.(noarch|src|i386|x86_64)\.rpm//" | sort -u > $branch-release-note-rpms-$dver

        # Update info
        cp move-to-$branch-release-$dver $ver-updated-$branch-$dver.txt
        osg-koji list-tagged --quiet --latest $release_repo | awk '{print $1}' > $ver-packages-$branch-$dver.txt
        xargs --arg-file $version-packages-$branch-$dver.txt osg-koji buildinfo | fgrep "/mnt" | xargs -n 1 basename | sort > $ver-rpms-$branch-$dver.txt
        if [ -d /p/vdt/public/html/release-info/ ]; then
            cp $ver-updated-$branch-$dver.txt $ver-packages-$branch-$dver.txt $ver-rpms-$branch-$dver.txt /p/vdt/public/html/release-info/
        else
            scp $ver-updated-$branch-$dver.txt $ver-packages-$branch-$dver.txt $ver-rpms-$branch-$dver.txt $rusermachine:/p/vdt/public/html/release-info/
        fi
    done
done
