#!/bin/bash

. release-common.sh

dotest () {
    file=$client-$ver-$data_rel.$rhel.$arch.tar.gz
    if [ -e $file ]; then
        echo "Testing $client-$ver-$data_rel.$rhel.$arch..."
        size=$(du -m "$file" | cut -f 1)
        if [ $size -lt $min_size ]; then
            echo -e "\e[1;33mWARNING: $client-$ver-$data_rel.$rhel.$arch is too small. Check with release manager.\e[0m"
        elif [ $size -gt $max_size ]; then
            echo -e "\e[1;33mWARNING: $client-$ver-$data_rel.$rhel.$arch is too big. Check with release manager.\e[0m"
        else
            echo -e "\e[1;32mOK: $client-$ver-$data_rel.$rhel.$arch is the right size.\e[0m"
        fi
        mkdir -p $rhel-$arch
        pushd $rhel-$arch
        tar xzf ../$file
        $client/osg/osg-post-install
        $client/osgrun osg-ca-manage setupCA --url osg
        $client/osgrun osg-update-vos
        popd
        rm -rf $rhel-$arch
    else
        echo -e "\e[1;31mERROR: $(pwd)/$client-$ver-$data_rel.$rhel.$arch tarball is missing.\e[0m"
    fi
}

echo "Enter the directory containing the tarballs:"
read tarball_directory
if [ ! -d $tarball_directory ]; then
    echo "Directory not found: $tarball_directory"
    exit 1
fi
pushd $tarball_directory

# drop upcoming from versions since they don't get their own tarballs
versions=(${versions[@]/upcoming/})

for ver in ${versions[@]}; do
    major_version="${ver%.*}"
    if [ "$major_version" = "3.4" ]; then
        rhels="el6 el7"
    else
        rhels="el7 el8"
    fi
    clients="osg-wn-client osg-afs-client"
    data_rel="1"
    if [ $DATA -ne 0 ]; then
        data_rel="$DATA"
    fi
    for client in $clients; do
        # No EL8 AFS tarball yet
        if [ "$client" = "osg-afs-client" -a "$major_version" = "3.5" ]; then
            rhels="el7"
        fi
        for rhel in $rhels; do
            min_size=24
            max_size=32
            if [ $rhel = "el7" ]; then
                max_size=36
            fi
            archs="x86_64"
            if [ "$major_version" = "3.3" -a $rhel = "el6" ]; then
                archs="i386 $archs"
            fi
            for arch in $archs; do
                dotest
            done
        done
    done
done
popd
